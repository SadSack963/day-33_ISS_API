# Example Python from the API site http://open-notify.org/Open-Notify-API/ISS-Location-Now/
# This doesn't work
#   - urllib was the original library for Python
#   - urllib2 was written for Python 2
#   - these two are combined and re-written for Python 3 into a new urllib
#   - urllib3 is a third-party package unrelated to the above
#   - requests internally uses urllib3 and is an easier-to-use API

import urllib2
import json

req = urllib2.Request("http://api.open-notify.org/iss-now.json")
response = urllib2.urlopen(req)
obj = json.loads(response.read())
print obj['timestamp']
print obj['iss_position']['latitude'], obj['data']['iss_position']['latitude']
# Example prints:
#   1364795862
#   -47.36999493 151.738540034


# Rewritten for Python 3:

import urllib.request
import json

req = "http://api.open-notify.org/iss-now.json"
response = urllib.request.urlopen(req)
obj = json.loads(response.read())
print(obj['timestamp'])
print(obj['iss_position']['latitude'], obj['iss_position']['longitude'])
# Example prints:
#   1364795862
#   -47.36999493 151.738540034


# ISS Pass Times
# The API returns a list of upcoming ISS passes for a particular location formatted as JSON.
# Milton Keynes - Latitude: 52.040623, Longitude: -0.759417

# Examples using jQuery (JavaScript) AJAX (Asynchronous JavaScript and XML)

$.getJSON('http://api.open-notify.org/iss-pass.json?lat=45.0&lon=-122.3&alt=20&n=5&callback=?', function(data) {
    data['response'].forEach(function (d) {
        var date = new Date(d['risetime']*1000);
         $('#isspass').append('<li>' + date.toString() + '</li>');
    });
});


# # Number of People In Space
# # How many people are in space right now?

$.getJSON('http://api.open-notify.org/astros.json?callback=?', function(data) {
    var number = data['number'];
    $('#spacepeeps').html(number);
    data['people'].forEach(function (d) {
        $('#astronames').append('<li>' + d['name'] + '</li>');
    });
});
